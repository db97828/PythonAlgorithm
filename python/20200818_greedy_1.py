"""
작성일: 2020-08-18
==============================================================================
문제: 문제 내용
[큰 수의 법칙]
배열의 크기 N, 숫자가 더해지는 횟수 M, 최대 반복될 수 있는 횟수 K가 주어질 때
동빈이의 큰 수의 법칙에 따른 결과를 출력하시오
==============================================================================
소요 시간: 00분
"""

n, m, k = map(int, input().split())
data = list(map(int, input().split()))

data.sort()
first = data[n-1]
second = data[n-2]

result = 0

while True:
    for i in range(k):
        if m == 0:
            break
        result += first
        m -= 1
    if m == 0:
        break
    result += second
    m -= 1

print(result)


"""
접근법: 
가장 간단한 방법으로 입력 값이 작을 때만 사용 가능하다.
값을 입력받아 정렬한 후 가장 큰 수를 k만큼 더하고, 두번째 큰 수를 1번 더하는 것을 반복하여
총 더하는 수 만큼 더해지면 결과 출력
==============================================================================
다른 해결 방식: 

n, m, k = map(int, input().split())
data = list(map(int, input().split()))

data.sort()
first = data[n-1]
second = data[n-2]

# 가장 큰 수가 더해지는 횟수 계산
count = int(m / (k+1) * k)    #반복되는 수열의 길이(k+1)로 나눈 몫에 k를 곱한 값이 가장 큰 수가 등장하는 횟수이다
count += m % (k+1)            #나누어떨어지지 않는 경우 나머지만큼 큰 수가 추가로 더해진다.

result = 0
result += count * first
result += (m - count) * second

print(result)
==============================================================================
개선점: 개선할 수 있는 부분
수학적으로 접근해보기
==============================================================================
노트: 
푼 문제 계속 반복해서 풀어보기
많은 문제 반복해서 풀어보기


"""